<!DOCTYPE html>
<html lang="en">
{{> head }}

<body>
    {{> sidebar }}
    <main>
        {{> header }}
        <section class="mt-[68px] p-4">
            <h1 class="font-bold text-lg pb-8">Update Category</h1>
            <form action="/" method="PATCH" onsubmit="update()">
                <div class="grid gap-4 mb-4 sm:grid-cols-2 sm:gap-6 sm:mb-5">
                    {{!-- NAME --}}
                    <div>
                        <label for="name" class="block mb-2 text-sm font-medium text-gray-900">Category
                            Names</label>
                        <input type="text" name="name" id="name"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-primary-500 dark:focus:border-primary-500"
                            value={{ json category.name }} placeholder="Enter category name" required="">
                    </div>
                    {{!-- PARENT --}}
                    <div class="category-parents">
                        <label for="category-parents" class="block mb-2 text-sm font-medium text-gray-900 ">Parent
                            Category</label>
                        <select id="category-parents" name="parent_id"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5  dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-primary-500 dark:focus:border-primary-500">
                            <option value=""></option>
                            {{#each categories}}
                            <option value="{{this.id}}" id="{{this.id}}">
                                {{this.name}}</option>
                            {{/each}}
                        </select>
                    </div>
                </div>
                <div class="flex items-center space-x-4">
                    <button type="submit"
                        class=" text-green-500 inline-flex items-center hover:text-white border border-green-500 hover:bg-green-500 focus:ring-4 focus:outline-none focus:ring-green-500 font-semibold rounded-lg text-sm px-5 py-2.5 text-center ">
                        Update
                    </button>
                    <button type="button"
                        class="text-red-600 inline-flex items-center hover:text-white border border-red-600 hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-300 font-semibold rounded-lg text-sm px-5 py-2.5 text-center  ">
                        <svg class="w-5 h-5 mr-1 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                            xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd"
                                d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                                clip-rule="evenodd"></path>
                        </svg>
                        Delete
                    </button>
                </div>
            </form>
        </section>
        {{> footer }}
    </main>


    <script>
        const category = {{ json category }}
        const categories = {{ json categories }}
        const updateUrl = {{ json updateUrl }}

        const categoryParents = document.querySelector('#category-parents')

        for (let item of categories) {
            if (item.id == category.parent_id) {
                categoryParents.value = item?.id
            }
        }

        const update = async () => {
            event.preventDefault()
            const formData = new FormData(event.target);
            const body = Object.fromEntries(formData);
            if (!body.parent_id) {
                body.parent_id = null
            }

            const accessToken = localStorage.getItem('access_token')
            try {
                const res = await fetch(updateUrl, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${accessToken}`
                    },
                    body: JSON.stringify(body),
                    credentials: 'include'
                })
                const data = await res.json()
                toast(data)
            } catch (e) {
                console.log(e)
            }
        }
    </script>
    {{> common }}
</body>

</html>