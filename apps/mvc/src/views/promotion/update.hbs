<!DOCTYPE html>
<html lang="en">
{{> head }}

<body>
    {{> sidebar }}
    <main>
        {{> header }}
        <section class="mt-[68px] p-4">
            <h1 class="font-bold text-lg pb-8">Update Promotion</h1>
            <form action="/" method="PATCH" onsubmit="update()">
                <div class="grid gap-4 mb-4 sm:grid-cols-2 sm:gap-6 sm:mb-5">
                    {{!-- NAME --}}
                    <div>
                        <label for="name" class="block mb-2 text-sm font-medium text-gray-900">Promotion
                            Name</label>
                        <input type="text" name="name" id="name"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-primary-500 dark:focus:border-primary-500"
                            value={{ json promotion.name }} placeholder="Enter category name" required="">
                    </div>
                    {{!-- PROMOTION LEVEL --}}
                    <div>
                        <label for="promotion-level" class="block mb-2 text-sm font-medium text-gray-900 ">Promotion
                            Level</label>
                        <select id="promotion-level" name="level"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5  dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-primary-500 dark:focus:border-primary-500">
                            <option value="PRODUCT" id="PRODUCT" class="promotion-level">PRODUCT</option>
                            <option value="ORDER" id="ORDER" class="promotion-level">ORDER</option>
                        </select>
                    </div>
                    {{!-- PROMOTION CONDITION --}}
                    <div>
                        <label for="promotion-condition" class="block mb-2 text-sm font-medium text-gray-900 ">Promotion
                            Condition</label>
                        <select id="promotion-condition" name="condition"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5  dark:border-gray-600 dark:placeholder-gray-400 dark:focus:ring-primary-500 dark:focus:border-primary-500">
                            <option value="EVENT" id="EVENT" class="promotion-condition">EVENT</option>
                            <option value="AT_LEAST" id="AT_LEAST" class="promotion-condition">AT_LEAST</option>
                        </select>
                    </div>
                    {{!-- MIN VALUE --}}
                    <div>
                        <label for="min_value" class="block mb-2 text-sm font-medium text-gray-900 ">Min Value</label>
                        <input type="number" name="min_value" id="min_value" min="0" max="9999"
                            oninput="this.value = Math.max(0, Math.min(this.value, 9999))"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5  dark:border-gray-600 dark:placeholder-gray-400  dark:focus:ring-primary-500 dark:focus:border-primary-500"
                            value={{ json promotion.min_value }} placeholder="100$" required="">
                    </div>
                    {{!-- DISCOUNT --}}
                    <div>
                        <label for="discount_percent" class="block mb-2 text-sm font-medium text-gray-900 ">Discount
                            Percent</label>
                        <input type="number" name="discount_percent" id="discount_percent" min="0" max="100"
                            oninput="this.value = Math.max(0, Math.min(this.value, 100))"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5  dark:border-gray-600 dark:placeholder-gray-400  dark:focus:ring-primary-500 dark:focus:border-primary-500"
                            value={{ json promotion.discount_percent }} placeholder="25%" required="">
                    </div>
                    {{!-- DESCRIPTION --}}
                    <div class="sm:col-span-2">
                        <label for="description"
                            class="block mb-2 text-sm font-medium text-gray-900">Description</label>
                        <textarea id="description" rows="8" name="description"
                            class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-primary-500 focus:border-primary-500  dark:border-gray-600 dark:placeholder-gray-400  dark:focus:ring-primary-500 dark:focus:border-primary-500"
                            placeholder="Write a advertisement here...">{{ json promotion.description }}</textarea>
                    </div>
                    {{!-- FILE --}}
                    <div class="sm:col-span-2">
                        <label class="block mb-2 text-sm font-medium text-gray-900 " for="default_size">Product
                            Image</label>
                        <input onchange="previewImage()"
                            class="block w-full mb-5 text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:border-gray-600 dark:placeholder-gray-400"
                            id="default_size" type="file">
                        <p class="mt-1 text-sm text-gray-800" id="file_input_help">SVG, PNG, JPG or
                            GIF
                            (MAX. 800x400px).</p>
                    </div>
                    {{!-- PREVIEW IMAGE --}}
                    <img id="preview-image" class="h-auto max-w-full" src="https://placehold.co/600x400"
                        alt="image description">
                </div>
                <div class="flex items-center space-x-4">
                    <button type="submit"
                        class=" text-green-500 inline-flex items-center hover:text-white border border-green-500 hover:bg-green-500 focus:ring-4 focus:outline-none focus:ring-green-500 font-semibold rounded-lg text-sm px-5 py-2.5 text-center ">
                        Update
                    </button>
                    <button type="button"
                        class="text-red-600 inline-flex items-center hover:text-white border border-red-600 hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-300 font-semibold rounded-lg text-sm px-5 py-2.5 text-center  ">
                        <svg class="w-5 h-5 mr-1 -ml-1" fill="currentColor" viewBox="0 0 20 20"
                            xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd"
                                d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                                clip-rule="evenodd"></path>
                        </svg>
                        Delete
                    </button>
                </div>
            </form>
        </section>
        {{> footer }}
    </main>


    <script>
        const promotion = {{ json promotion }}
        const updateUrl = {{ json updateUrl }}
        const uploadUrl = {{ json uploadUrl }}

        const promotionLevel = document.querySelector('#promotion-level')
        const promotionCondition = document.querySelector('#promotion-condition')
        const promotionLevelArr = document.querySelectorAll('.promotion-level')
        const promotionConditionArr = document.querySelectorAll('.promotion-condition')
        const previewImg = document.querySelector('#preview-image')
        let fileToUpload

        for (let item of promotionLevelArr) {
            if (item.value == promotion.level) {
                promotionLevel.value = item.value
            }
        }

        for (let item of promotionConditionArr) {
            if (item.value == promotion.condition) {
                promotionCondition.value = item.value
            }
        }

        if (promotion?.image) {
            previewImg.src = promotion?.image
        }

        const update = async () => {
            event.preventDefault()
            const formData = new FormData(event.target);
            const body = Object.fromEntries(formData);
            body.discount_percent = Number(body.discount_percent)
            body.min_value = Number(body.min_value)

            const accessToken = localStorage.getItem('access_token')
            try {
                const location = await uploadFile()
                if (location) {
                    body.image = location
                }

                const res = await fetch(updateUrl, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${accessToken}`
                    },
                    body: JSON.stringify(body),
                    credentials: 'include'
                })
                const data = await res.json()
                toast(data)
            } catch (e) {
                console.log(e)
            }
        }

        const previewImage = () => {
            const input = event.target
            const reader = new FileReader()

            reader.onload = () => {
                previewImg.src = reader.result;
            };

            if (input.files && input.files[0]) {
                reader.readAsDataURL(input.files[0]);
                fileToUpload = input.files[0];
            }
        }

        const uploadFile = async () => {
            const formData = new FormData();
            formData.append('image', fileToUpload);
            const res = await fetch(uploadUrl, {
                method: 'POST',
                body: formData
            })
            const data = await res.json()
            return data?.data
        }
    </script>
    {{> common }}
</body>

</html>